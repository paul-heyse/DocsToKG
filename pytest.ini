[pytest]
# === Optimization 9: Deterministic & Fast Test Matrix ===

# Minimum Python version
minversion = 6.0

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Marker definitions (complementing pytest_configure in conftest.py)
markers =
    unit: Pure unit test (no I/O, <50ms). Fastest test stratum.
    component: Component-level test (one subsystem, <500ms). Medium speed.
    e2e: End-to-end test (small dataset, <5s). Full pipeline verification.
    property: Property-based test using Hypothesis. Generative testing.
    slow: Slow/heavy test (opt-in, nightly/local). Large datasets or long-running.
    windows_only: Windows-specific test. Platform-dependent behavior.
    posix_only: POSIX-specific test (Linux/macOS). Platform-dependent behavior.
    real_vectors: Test requiring real-vector fixture. Large model dependency.
    scale_vectors: Test requiring large-scale real-vector fixture. Extreme resource requirement.

# Test output and reporting
addopts =
    # Verbose output
    -v
    # Show local variables on failure
    -l
    # Show summary of all test outcomes
    -ra
    # Disable warnings summary (can be verbose)
    --tb=short
    # Use verbose assertion rewriting
    --assert=plain
    # Strict markers (fail on unknown markers)
    --strict-markers
    # Coverage options (if pytest-cov is installed)
    --cov=DocsToKG
    --cov-report=term-missing:skip-covered
    --cov-report=html:htmlcov
    --cov-report=json:.ci/coverage.json
    # Benchmark options (if pytest-benchmark is installed; disabled by default)
    --benchmark-disable
    --benchmark-autosave

# Hypothesis settings
[hypothesis]
profile = test
database = none

# Coverage thresholds (per layer)
[coverage:run]
omit =
    */tests/*
    */site-packages/*
    */__pycache__/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
    @abc.abstractmethod
    pass
precision = 2

# Branch coverage thresholds (aspirational targets from Optimization 9)
# - unit: 95%
# - component: 85%
# - e2e: 70%
fail_under = 75
