# .envrc (safe & quiet)
export UV_PROJECT_ENVIRONMENT="${UV_PROJECT_ENVIRONMENT:-$PWD/.venv}"
VENVP="$UV_PROJECT_ENVIRONMENT"

# Automatically activate the project virtual environment when present.
if [[ -d "$VENVP" ]]; then
    export VIRTUAL_ENV="$VENVP"
    PATH_add "$VIRTUAL_ENV/bin"
else
    echo "direnv warning: missing virtual environment at $VENVP" >&2
    if command -v uv >/dev/null 2>&1; then
        echo "Run ./scripts/bootstrap_env.sh to create it (pass --gpu for GPU extras)." >&2
    else
        echo "Install uv (https://docs.astral.sh/uv/) then run ./scripts/bootstrap_env.sh." >&2
    fi
fi

# Make the source tree discoverable for agents that rely on PYTHONPATH.
export PYTHONPATH="$PWD/src${PYTHONPATH:+:$PYTHONPATH}"

# Expose local wheelhouse to uv/pip if present.
if [[ -d "$PWD/.wheelhouse" ]]; then
    export UV_FIND_LINKS="${UV_FIND_LINKS:+$UV_FIND_LINKS:}$PWD/.wheelhouse"
    export PIP_FIND_LINKS="${PIP_FIND_LINKS:+$PIP_FIND_LINKS:}$PWD/.wheelhouse"
fi

# Load .env if present (direnv stdlib)
dotenv_if_exists
