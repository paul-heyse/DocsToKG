# Module: documentation

**Overview**
- DocParsing Requirement Documentation Registry for the ``refine-docparsing-implementation`` OpenSpec change.
- Keeps refined requirements visible to documentation tooling before the production rollout.
- Anchors requirement metadata to the authoritative spec at ``specs/doc-parsing/spec.md``.

**Highlights**
- Normalised fields for requirement name, summary, and validation scenarios.
- Cross-references to ``design.md``, ``implementation-patterns.md``, and ``tasks.md`` so reviewers can trace coverage quickly.
- Lightweight API that streams requirement metadata into autogenerated docs.

**Usage**
```python
from openspec.changes.refine_docparsing_implementation.documentation import (
    load_requirement_docs,
)

first_requirement = next(iter(load_requirement_docs()))
print(first_requirement.summary)
```

## API Reference

### Function `load_requirement_docs()`

**Description**
- Returns the curated requirement catalogue that mirrors the OpenSpec change proposal.

**Returns**
- ``Tuple[RequirementDoc, ...]``: Immutable collection of requirement summaries ready for docstring-driven pipelines.

### Dataclass `RequirementDoc`

**Description**
- Human-readable requirement snapshot that matches the structure of the OpenSpec scenarios.

**Attributes**
- ``name``: Title of the requirement exactly as recorded in the specification.
- ``summary``: Narrative explaining the behavioural refinement and its intent.
- ``spec_reference``: Relative path to the authoritative specification text anchoring the change.
- ``scenarios``: List of validation scenarios pulled verbatim from the spec to link acceptance criteria and implementation tests.
