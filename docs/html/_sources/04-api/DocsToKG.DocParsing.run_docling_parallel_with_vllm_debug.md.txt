# 1. Module: run_docling_parallel_with_vllm_debug

This reference documents the DocsToKG module ``DocsToKG.DocParsing.run_docling_parallel_with_vllm_debug``.

Legacy PDF → DocTags Converter with vLLM (DEPRECATED).

⚠️  This script is deprecated. Use the unified CLI instead:
    python -m DocsToKG.DocParsing.cli.doctags_convert --mode pdf

This shim forwards invocations to the unified CLI for backward compatibility
and will be removed in a future release.

## 1. Functions

### `build_parser()`

Build the deprecated argument parser and forward to the unified CLI.

Args:
None

Returns:
Parser instance sourced from the unified CLI implementation.

Raises:
ImportError: If the unified CLI module cannot be imported.

### `parse_args(argv)`

Parse command-line arguments using the forwarded parser.

Args:
argv: Optional list of CLI arguments to parse instead of :data:`sys.argv`.

Returns:
Namespace containing CLI arguments supported by the unified command.

Raises:
SystemExit: Propagated when parsing fails.

### `main(argv)`

Forward to the unified CLI with PDF mode forced.

Args:
argv: Optional CLI argument list excluding the executable.

Returns:
Exit status returned by the unified CLI entry point.

Raises:
SystemExit: Propagated if the invoked CLI terminates.

### `ensure_vllm()`

Fallback ensure_vllm stub raising to encourage CLI migration.

Args:
*args: Positional arguments captured for compatibility.
**kwargs: Keyword arguments captured for compatibility.

Returns:
None. This function always raises.

Raises:
RuntimeError: Always raised to direct callers to the unified CLI.

### `stop_vllm()`

Fallback stop_vllm stub returning ``None``.

Args:
*_args: Positional arguments ignored.
**_kwargs: Keyword arguments ignored.

Returns:
None. The stub performs no action.

### `list_pdfs(directory)`

Return sorted list of ``.pdf`` files when legacy helpers are missing.

Args:
directory: Directory path containing candidate PDF files.

Returns:
Sorted list of ``Path`` objects for ``.pdf`` files in ``directory``.

### `convert_one(task)`

Fallback convert stub that forces migration to unified CLI.

Args:
task: Conversion task payload expected by legacy pipeline.

Returns:
None. The stub always raises.

Raises:
RuntimeError: Always raised to direct callers to the unified CLI.

### `tqdm(iterable)`

Fallback progress wrapper when :mod:`tqdm` is unavailable.

Args:
iterable: Iterable to wrap for progress reporting.
*args: Positional arguments accepted for API compatibility.
**kwargs: Keyword arguments accepted for API compatibility.

Returns:
The original iterable when provided, otherwise an empty list.
