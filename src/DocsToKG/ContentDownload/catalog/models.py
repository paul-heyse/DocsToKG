# === NAVMAP v1 ===
# {
#   "module": "DocsToKG.ContentDownload.catalog.models",
#   "purpose": "Data models for the artifact catalog.",
#   "sections": [
#     {
#       "id": "documentrecord",
#       "name": "DocumentRecord",
#       "anchor": "class-documentrecord",
#       "kind": "class"
#     }
#   ]
# }
# === /NAVMAP ===

"""Data models for the artifact catalog."""

from __future__ import annotations

from dataclasses import dataclass
from datetime import datetime


@dataclass(frozen=True, slots=True)
class DocumentRecord:
    """Immutable record of a successfully stored artifact.

    This dataclass represents a single catalog entry for a downloaded artifact.
    It is frozen (immutable) to prevent accidental modification after creation.

    Attributes:
        id: Primary key (auto-generated by database)
        artifact_id: Artifact identifier (e.g., DOI, PMID, URL)
        source_url: Original source URL where artifact was found
        resolver: Resolver name that found this URL (e.g., 'unpaywall')
        content_type: MIME type (e.g., 'application/pdf', 'text/html')
        bytes: File size in bytes
        sha256: SHA-256 hash in lowercase hex; may be None if hashing disabled
        storage_uri: Storage location as URI (e.g., 'file:///path' or 's3://bucket/key')
        created_at: ISO 8601 timestamp (UTC) when record was created
        updated_at: ISO 8601 timestamp (UTC) when record was last updated
        run_id: Optional run ID for provenance and traceability
    """

    id: int
    artifact_id: str
    source_url: str
    resolver: str
    content_type: str | None
    bytes: int
    sha256: str | None
    storage_uri: str
    created_at: datetime
    updated_at: datetime
    run_id: str | None = None
