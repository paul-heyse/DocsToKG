version: "3.9"

services:
  # DuckDB Catalog Service
  duckdb-catalog:
    image: duckdb:1.0
    container_name: duckdb-catalog
    volumes:
      - duckdb-data:/var/lib/duckdb
    environment:
      - DUCKDB_DATA_DIR=/var/lib/duckdb
    ports:
      - "8432:8432"
    healthcheck:
      test: ["CMD", "ls", "/var/lib/duckdb"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ontology-download

  # OntologyDownload Application
  ontology-download:
    image: docstokg/ontology-download:latest
    container_name: ontology-download
    environment:
      - DUCKDB_PATH=/data/catalog.duckdb
      - LOG_LEVEL=INFO
      - ENABLE_IDEMPOTENCY=true
      - DOCSTOKG_RATE_BACKEND=sqlite:/data/rate-limits.db
    volumes:
      - ontology-data:/data
      - ontology-logs:/logs
    ports:
      - "8000:8000"
    depends_on:
      duckdb-catalog:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ontology-download
    restart: unless-stopped
    resources:
      limits:
        cpus: "2"
        memory: 4G
      reservations:
        cpus: "1"
        memory: 2G

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
    networks:
      - ontology-download
    restart: unless-stopped

  # Grafana Dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - ontology-download
    restart: unless-stopped

  # Nginx Load Balancer
  nginx:
    image: nginx:latest
    container_name: nginx-lb
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - ontology-download
    networks:
      - ontology-download
    restart: unless-stopped

volumes:
  duckdb-data:
    driver: local
  ontology-data:
    driver: local
  ontology-logs:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  ontology-download:
    driver: bridge
