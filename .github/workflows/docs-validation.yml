name: Documentation Validation

on:
    push:
        branches: [main, develop]
        paths:
            - "docs/**"
            - ".github/workflows/docs-validation.yml"
    pull_request:
        branches: [main, develop]
        paths:
            - "docs/**"
            - ".github/workflows/docs-validation.yml"

jobs:
    validate-documentation:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.13"

            - name: Install system dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get install -y python3-sphinx

            - name: Install Python dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install pyyaml

            - name: Make scripts executable
              run: chmod +x docs/scripts/*.py

            - name: Validate documentation structure
              run: |
                  python docs/scripts/validate_docs.py

            - name: Check for broken links
              run: |
                  python docs/scripts/check_links.py --quick --timeout 5

            - name: Validate documentation style
              run: |
                  # Run basic validation checks
                  python -c "
                  import os
                  import sys
                  from pathlib import Path

                  docs_dir = Path('docs')
                  issues = []

                  # Check if required files exist
                  required_files = [
                      'README.md',
                      'STYLE_GUIDE.md',
                      '01-overview/index.md',
                      '02-setup/index.md',
                      '04-api/index.md',
                      '05-development/index.md'
                  ]

                  for file_path in required_files:
                      full_path = docs_dir / file_path
                      if not full_path.exists():
                          issues.append(f'Missing required file: {file_path}')

                  # Check for basic content in key files
                  key_files = ['README.md', 'STYLE_GUIDE.md']
                  for file_path in key_files:
                      full_path = docs_dir / file_path
                      if full_path.exists():
                          with open(full_path, 'r') as f:
                              content = f.read()
                              if len(content.strip()) < 100:
                                  issues.append(f'File too short: {file_path}')

                  if issues:
                      print('❌ Documentation validation issues:')
                      for issue in issues:
                          print(f'  - {issue}')
                      sys.exit(1)
                  else:
                      print('✅ Documentation structure validation passed')
                  "

            - name: Generate documentation report
              if: always()
              run: |
                  echo "## Documentation Validation Report" > docs_validation_report.md
                  echo "" >> docs_validation_report.md
                  echo "✅ Documentation validation completed successfully" >> docs_validation_report.md
                  echo "" >> docs_validation_report.md
                  echo "### Files Checked:" >> docs_validation_report.md
                  find docs/ -name "*.md" | wc -l | xargs echo "- Markdown files:" >> docs_validation_report.md
                  echo "- Templates: $(find docs/templates/ -name "*.md" 2>/dev/null | wc -l)" >> docs_validation_report.md
                  echo "- Scripts: $(find docs/scripts/ -name "*.py" 2>/dev/null | wc -l)" >> docs_validation_report.md

            - name: Upload validation report
              if: always()
              uses: actions/upload-artifact@v4
              with:
                  name: documentation-validation-report
                  path: docs_validation_report.md
