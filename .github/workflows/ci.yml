name: CI
on:
    push:
    pull_request:
    workflow_dispatch:

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  lfs: false
                  fetch-depth: 1
              env:
                  GIT_LFS_SKIP_SMUDGE: "1"

            - name: Free disk space
              run: |
                  df -h
                  sudo rm -rf /usr/local/lib/android
                  sudo rm -rf /opt/ghc
                  sudo rm -rf /opt/hostedtoolcache/CodeQL
                  sudo rm -rf /opt/hostedtoolcache/go
                  df -h
            - name: Install system dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libopenblas0
            - name: Install CUDA Toolkit 12.9
              run: |
                  sudo apt-get update
                  sudo apt-get install -y wget gnupg2
                  wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2404/x86_64/cuda-ubuntu2404.pin
                  sudo mv cuda-ubuntu2404.pin /etc/apt/preferences.d/cuda-repository-pin-600
                  wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2404/x86_64/3bf863cc.pub
                  sudo install -m 0755 -d /usr/share/keyrings
                  sudo gpg --dearmor -o /usr/share/keyrings/nvidia-cuda.gpg 3bf863cc.pub
                  echo "deb [signed-by=/usr/share/keyrings/nvidia-cuda.gpg] https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2404/x86_64/ /" | sudo tee /etc/apt/sources.list.d/cuda-ubuntu2404.list
                  sudo apt-get update
                  sudo apt-get install -y cuda-runtime-12-9 cuda-nvrtc-12-9 cuda-cudart-dev-12-9
            - name: Set up Python
              id: setup-python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.13"
            - name: Restore cached virtualenv
              id: cache-venv
              uses: actions/cache@v4
              with:
                  path: .venv
                  key: ${{ runner.os }}-venv-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('requirements.txt', 'pyproject.toml', 'ci/wheels/*.whl') }}
                  restore-keys: |
                      ${{ runner.os }}-venv-${{ steps.setup-python.outputs.python-version }}-
                  save-if: always()
            - name: Restore pip download cache
              id: cache-pip
              uses: actions/cache@v4
              with:
                  path: ~/.cache/pip
                  key: ${{ runner.os }}-pip-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('requirements.txt', 'pyproject.toml', 'ci/wheels/*.whl') }}
                  restore-keys: |
                      ${{ runner.os }}-pip-${{ steps.setup-python.outputs.python-version }}-
                  save-if: always()
            - name: Install dependencies
              if: steps.cache-venv.outputs.cache-hit != 'true'
              shell: bash
              run: |
                  python -m venv .venv
                  source .venv/bin/activate
                  python -m pip install --upgrade pip
                  pip install --no-cache-dir -r requirements.txt
                  pip install --no-cache-dir pytest pytest-cov pytest-logging
            - name: Add virtualenv to PATH
              run: echo "${{ github.workspace }}/.venv/bin" >> $GITHUB_PATH
            - name: Run tests
              shell: bash
              run: |
                  source .venv/bin/activate
                  python -V
                  pytest -q
            - name: HybridSearch validation CLI smoke test
              shell: bash
              run: |
                  source .venv/bin/activate
                  python -m DocsToKG.HybridSearch.validation --help
